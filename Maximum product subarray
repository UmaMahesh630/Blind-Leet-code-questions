Given an integer array nums, find a 
subarray
 that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.

 

Example 1:

Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.



public class Solution {
    public int MaxProduct(int[] nums) {
        int left = 1, right = 1, max=0;
        if(nums == null || nums.Length == 0) return 0;
        if(nums.Length == 1) return nums[0];

        for(int i=0; i< nums.Length; i++){
            if(left == 0)
               left = 1;
            if(right == 0)
            right =1;

            left *= nums[i];
            right *= nums[nums.Length-1-i];

            max = Math.Max(max,Math.Max(left,right));
        }
        return max;
    }
}

